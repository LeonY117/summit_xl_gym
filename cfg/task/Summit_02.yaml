# used to create the object
name: Summit_02

physics_engine: ${..physics_engine}

# if given, will override the device setting in gym.
env:
  #  numEnvs: ${...num_envs}
  numEnvs: ${resolve_default:4096,${...num_envs}}
  envSpacing: 12
  episodeLength: 200
  enableDebugVis: True

  clipActions: 1.0

  powerScale: 4.0
  controlFrequencyInv: 60 # 60 Hz

  # reward & cost parameters
  progressWeight: 0.1
  distWeight: 0.1
  reachedGoalWeight: 10

  timeWeight: 0.1

  plane:
    staticFriction: 1.0
    dynamicFriction: 1.0
    restitution: 0.0

  asset:
    assetFileName: "summit_xl_description/robots/summit_xls_std_fixed_camera.urdf"

  room_config: "room_2.yaml"

  # boxes starting pos and rot
  useBoxes: True
  randomize_box:
    randomize_pos: False
    x_bound: [-0.5, 1]
    y_bound: [-1, 1]
    randomize_rot: True

  # summit starting pos and rot
  randomize_summit:
    randomize_pos: True
    x_bound: [-1, -0.5]
    y_bound: [-1, 1]
    whole_map_start_prob: 0.5
    randomize_rot: True

  # box mass and friction
  randomize_box_properties: True
  randomize_summit_properties: False
  randomize_properties:
    box_mass: [0.5, 10]
    box_friction: [0.05, 0.5]
    box_width: [0.8, 1.5]

  # set to True if you use camera sensors in the environment
  enableCameraSensors: False

sim:
  dt: 0.0166 # 1/60 s
  # dt: 0.0332
  # dt: 0.1
  substeps: 1
  up_axis: "z"
  use_gpu_pipeline: ${eq:${...pipeline},"gpu"}
  gravity: [0.0, 0.0, -9.81]
  physx:
    num_threads: ${....num_threads}
    solver_type: ${....solver_type}
    use_gpu: ${contains:"cuda",${....sim_device}} # set to False to run on CPU
    num_position_iterations: 4
    num_velocity_iterations: 0
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 10.0
    default_buffer_size_multiplier: 5.0
    max_gpu_contact_pairs: 8388608 # 8*1024*1024
    num_subscenes: ${....num_subscenes}
    contact_collection: 2 # 0: CC_NEVER (don't collect contact info), 1: CC_LAST_SUBSTEP (collect only contacts on last substep), 2: CC_ALL_SUBSTEPS (default - all contacts)

task:
  randomize: False
  randomization_params:
    # specify which attributes to randomize for each actor type and property
    frequency: 600 # Define how many environment steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .02]
      operation: "additive"
      distribution: "gaussian"
    # actor_params
